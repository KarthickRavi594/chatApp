{"version":3,"sources":["components/messages/MessageReceived.jsx","components/messages/MessageSent.jsx","components/messages/Messages.jsx","components/messages/MessageRoom.jsx","components/messages/MemberTitle.jsx","components/messages/MessageSection.jsx","pages/Home.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["MessageReceived","id","message","className","bumped_message_metadata","bumped_message","Date","timestamp_ms","toDateString","MessageSent","Messages","sender_name","_id","MessageRoom","messages","currentChat","map","m","MemberTitle","friend","dp","username","picture","substr","useEffect","members","MessageSection","Home","updatedMessages","sort","a","b","console","log","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.999aa768.chunk.js","sourcesContent":["import React from \"react\";\n\nconst MessageReceived = ({ id, message }) => {\n  return (\n    <div key={id}>\n      <div className=\"ml-auto text-right p-2 max-w-max bg-yellow-300 rounded-lg text-sm\">\n        <div>{message.bumped_message_metadata.bumped_message}</div>\n      </div>\n      <div className=\"text-right text-gray-700 italic text-xs pt-0.5 pb-1\">\n        You received {new Date(message.timestamp_ms).toDateString()}\n      </div>\n    </div>\n  );\n};\n\nexport default MessageReceived;\n","import React from \"react\";\n\nconst MessageSent = ({ id, message }) => {\n  return (\n    <div>\n      <div className=\"mr-auto p-2 max-w-max bg-yellow-800 text-white rounded-lg text-sm\">\n        <div>{message.bumped_message_metadata.bumped_message}</div>\n      </div>\n      <div className=\"text-gray-700 italic text-xs pt-0.5\">\n        You Sent {new Date(message.timestamp_ms).toDateString()}\n      </div>\n    </div>\n  );\n};\n\nexport default MessageSent;\n","import React from \"react\";\nimport MessageReceived from \"./MessageReceived\";\nimport MessageSent from \"./MessageSent\";\n\nconst Messages = ({ message }) => {\n  return (\n    <div>\n      {message.sender_name === \"Karthick RaviChandran\" ? <div>\n          <MessageSent id={message._id} message={message} />\n        </div>\n        : <div>\n        <MessageReceived id={message._id} message={message} />\n      </div>\n}\n    </div>\n  );\n};\n\nexport default Messages;\n","import React from \"react\";\nimport Messages from \"./Messages\";\n\nconst MessageRoom = ({ currentChat }) => {\n  const messages = currentChat;\n  return (\n    <div className=\"flex-grow h-80 overflow-y-auto border-none p-4 rounded-md\">\n      <div className=\"flex flex-col\">\n        {messages.map((m) => (\n          <div key={m.timestamp_ms}>\n            <Messages message={m}/>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MessageRoom;\n","import React, { useEffect } from \"react\";\n\nconst MemberTitle = ({ currentChat }) => {\n  const friend = {};\n  let dp = friend?.username;\n  let picture = dp?.substr(0, 2);\n\n  useEffect(() => {\n    \n  }, [currentChat]);\n\n  return (\n    <div className=\"h-12 bg-yellow-300 flex flex-row items-center justify-between p-3  text-sm sm:text-lg sm:py-2\">\n      <div>{friend.username}</div>\n      {currentChat.members && (\n        <div className=\"pt-1 px-1 border-2 border-yellow-600 rounded-full bg-yellow-50 text-gray-500 font-bold uppercase text-xl\">\n          {picture}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MemberTitle;\n","import React from \"react\";\nimport MessageRoom from \"./MessageRoom\";\nimport MemberTitle from \"./MemberTitle\";\n\nconst MessageSection = ({ currentChat }) => {\n\n  return (\n    <div className=\"flex flex-col justify-between border-4 border-yellow-300 bg-yellow-50 rounded-xl sm:w-5/12\">\n      <MemberTitle currentChat={currentChat} />\n      <MessageRoom\n        currentChat={currentChat}\n      />\n    </div>\n  );\n};\n\nexport default MessageSection;\n","import React from \"react\";\nimport MessageSection from \"../components/messages/MessageSection\";\nimport { messages } from \"../components/messages/priyanagarathinam_ryxzqhgrsq/message_1.json\";\nconst Home = () => {\n  const updatedMessages = messages.sort(function(a,b){\n    return new Date(a.timestamp_ms) - new Date(b.timestamp_ms);\n  });\n  console.log(updatedMessages);\n  return (\n    <div>\n      <div className=\"flex flex-col h-screen\">\n        <div className=\"flex flex-grow justify-center gap-1 py-1 mx-1 bg-yellow-100\">\n          <MessageSection\n            currentChat={updatedMessages}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}